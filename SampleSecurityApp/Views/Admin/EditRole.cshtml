@model SampleSecurityApp.ViewModels.EditRoleViewModel

@{
    ViewData["Title"] = "EditRole";
}

<h1>Edit Role</h1>


<div class="row">
    <div class="col-md-4">
        <form asp-action="EditRole">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" readonly="readonly" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RoleName" class="control-label"></label>
                <input asp-for="RoleName" class="form-control" />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>

        <div class="card">
            <div class="card-header">
                <h3>User in this role</h3>
            </div>
            <div class="card-body">
                @if (Model.Users.Any())
                {
                    foreach(var user in Model.Users)
                    {
                        <h5 class="card-title">@user</h5>
                    }
                }
                else
                {
                    <h5 class="card-title">No users in this role</h5>
                }
            </div>
            <div class="card-footer">
                <a class="btn btn-primary" asp-action="EditUsersInRole" asp-controller="Admin"
                   asp-route-roleId="@Model.Id">Add Or Remove User</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
